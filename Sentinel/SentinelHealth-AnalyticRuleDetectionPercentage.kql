// Query to display detection pcentage / number of detections (alerts generated) per analytic rule
// Logic is based on total runs and detection (alerts generated) runs
// Output includes rules with at least 1 detection (alert generated) and excludes rules with zero detections
// Output includes First + Last Detection per analytic rule

let TotalAnalyticRuleRuns = SentinelHealth
| where TimeGenerated > ago (30d)
| where OperationName == "Scheduled analytics rule run"
| where Status != "Failure" 
| summarize count() by SentinelResourceName
| project SentinelResourceName, TotalRuns = count_;
TotalAnalyticRuleRuns
| join (SentinelHealth
| where TimeGenerated > ago (30d)
| where OperationName == "Scheduled analytics rule run"
| where Status != "Failure" 
| where ExtendedProperties.AlertsGeneratedAmount <> 0
| summarize FirstDetection = min(TimeGenerated),LastDetection = max(TimeGenerated), count() by SentinelResourceName
| extend Detections = count_
) on $left.SentinelResourceName == $right.SentinelResourceName
| extend DetectionPercentage = round((todouble(Detections) / TotalRuns * 100), 2)
| project SentinelResourceName, TotalRuns, Detections, DetectionPercentage, FirstDetection, LastDetection
| sort by SentinelResourceName asc


====================================================================================================================
====================================================================================================================


// Query to display detection pcentage / number of detections (alerts generated) per analytic rule
// Logic is based on total runs minus zero detections (no alerts generated) runs to determine detection counts
// Output includes rules with zero detections and excludes rules that have a 100% detection rate
// Output includes the First + Last Time each rule ran


let TotalAnalyticRuleRuns = SentinelHealth
| where TimeGenerated > ago (30d)
| where OperationName == "Scheduled analytics rule run"
| where Status != "Failure" 
| summarize FirstRun = min(TimeGenerated), LastRun = max(TimeGenerated), count() by SentinelResourceName
| project SentinelResourceName, TotalRuns = count_, FirstRun, LastRun;
TotalAnalyticRuleRuns
| join (SentinelHealth
| where TimeGenerated > ago (30d)
| where OperationName == "Scheduled analytics rule run"
| where Status != "Failure" 
| where ExtendedProperties.AlertsGeneratedAmount == 0
| summarize count() by SentinelResourceName
) on $left.SentinelResourceName == $right.SentinelResourceName
| extend DetectionPercentage = round((todouble(count_) / TotalRuns * -100 + 100), 2)
| extend Detections = TotalRuns - count_
| project SentinelResourceName, TotalRuns, Detections, DetectionPercentage, FirstRun, LastRun
| sort by SentinelResourceName asc
